---
title: "data-cleaning"
---

```{r}
# Packages 
library(readr)
library(ggformula) # Used to set attributes
library(dplyr)
library(stringr)
```

```{r}
data <- read_csv("~/Desktop/PSY-Roommate-Chores-main/roommate-chores-data.csv")
```

```{r}
# dropping first two rows
data_tidy <- data[-c(1,2), ]

# turning questions into attributes
var_label(data_tidy) <- data[1, , drop = FALSE]
```

```{r}
# Run once!
data_tidy <- data_tidy %>% 
  filter(consent == 1) 

data_tidy <- data_tidy[, -c(1:18)]
```

## data wrangling

```{r}
# moving email columns to the front
data_tidy <- data_tidy %>%
  select(email, email_confirm, ptnr_email, ptnr_email_confirm, everything())
```


```{r}
# checking if participant and participant partners' emails match
data_tidy <- data_tidy %>% 
 mutate(email_match = ifelse(str_detect(
   email,fixed(as.character(email_confirm),ignore_case=TRUE)),
   "Yes", "No")) %>% 
  relocate(email_match, .after=email_confirm) %>% 
   mutate(ptnr_email_match = ifelse(str_detect(
   ptnr_email,fixed(as.character(ptnr_email_confirm),ignore_case=TRUE)),
   "Yes", "No")) %>% 
  relocate(ptnr_email_match, .after=ptnr_email_confirm) %>% 

# if match is "Yes", change partner and personal email values to lower-case
  mutate(email = ifelse(email_match == "Yes", tolower(email))) %>% 
  mutate(ptnr_email = ifelse(ptnr_email_match == "Yes", tolower(ptnr_email))) 
```
# note to self: filter out participants with more than one roommate
```{r}
# creating dyad IDs
data_tidy <- data_tidy %>%
  mutate(dyad_ID_raw = dense_rank(paste0(pmax(email, ptnr_email), pmin(email, ptnr_email)))) %>% 
  group_by(dyad_ID_raw) %>% 
  mutate(dyad_occur= n()) %>% 
  select(dyad_ID_raw, dyad_occur, everything())
```

```{r}
# replacing the dyad IDs with no emails entered, or is not yet matched, as NA

data_tidy <- data_tidy %>% 
  mutate(dyad_ID = ifelse(dyad_occur != 2, NA, dyad_ID_raw)) %>% 
  select(dyad_ID, everything())
```
# RUN ONCE
```{r}
# tidying up the dyad IDs
data_tidy <- data_tidy %>% 
  mutate(dyad_ID = ifelse(min(data_tidy$dyad_ID, na.rm = TRUE) == 1, dyad_ID, dyad_ID - (min(data_tidy$dyad_ID, na.rm = TRUE) -1))) %>%
  select(dyad_ID, everything()) %>% 
  arrange(dyad_ID)
```

```{r}
# creating id for each person
data_tidy <- data_tidy %>% 
  group_by(dyad_ID) %>% 
  mutate(id = seq_along(dyad_ID))  %>% 
  relocate(id, .after = dyad_ID) 

data_tidy$id <- replace(data_tidy$id, is.na(data_tidy$dyad_ID) == TRUE, NA)
```

```{r}
tidy <- data_tidy %>% 
  select(-c(dyad_ID_raw, dyad_occur))
```

